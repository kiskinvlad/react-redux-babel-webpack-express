{"version":3,"sources":["C:/Users/kiskin-laptop/WebstormProjects/react-redux-babel-webpack-express/app\\src\\containers\\TestPage\\TestPage.jsx"],"names":["OBJECTACTIONS","TestPage","props","state","componentValue","incrementValue","storageValue","value","setState","fetchObjs","fetchedObjects","styles","require","search","map","el","storageValueHandler","stateValueHandler","propTypes","array","isRequired","func","number","mapStateToProps","searchPageObjects","objectsReducer","mapDispatchToProps","dispatch","fetchObjects","val"],"mappings":";;okBAAA,4B;AACA;AACA;AACA,4D,GAAYA,c;AACZ,8E;;;AAGMC,Q;AACF,kBAAYC,KAAZ,CAAmB;AACTA,KADS;;;;AAKf,MAAKC,KAAL,CAAa,CAACC,eAAgB,CAAjB,CAAb,CALe;AAMlB,C;;AAEoB;AACwB,KAAKF,KAD7B,CACTG,cADS,QACTA,cADS,CACOC,YADP,QACOA,YADP;AAEjBD,eAAeC,YAAf;AACH,C;AACiBC,K,CAAM;AACpBA;AACA,KAAKC,QAAL,CAAc,CAACJ,eAAgBG,KAAjB,CAAd;AACH,C;;;;AAIoB;AACTE,SADS,CACM,KAAKP,KADX,CACTO,SADS;AAEjBA;AACH,C;;;;AAIQ;AACoC,KAAKP,KADzC,CACGQ,cADH,SACGA,cADH,CACmBJ,YADnB,SACmBA,YADnB;AAEGF,cAFH,CAEsB,KAAKD,KAF3B,CAEGC,cAFH;AAGL,GAAMO,QAASC,QAAQ,iBAAR,CAAf;AACA;AACI,qCAAK,UAAU,WAAf;AACI,mDAAK,GAAI,EAAT;AACI,qCAAK,UAAWD,OAAOE,MAAvB;AACI,8DADJ;AAEI,gEAA0BH,eAAeI,GAAf,CAAmB,mBAAIC,IAAK,IAAT,EAAnB,CAA1B,CAFJ;AAGI,wDAAgB,KAAK,gBAArB,EAHJ;AAII,sDAAQ,QAAS,yBAAI,QAAKC,mBAAL,EAAJ,EAAjB,mCAAgFV,YAAhF,CAJJ;AAKI,sDAAQ,QAAS,yBAAI,QAAKW,iBAAL,CAAuBb,cAAvB,CAAJ,EAAjB,iCAA0FA,cAA1F,CALJ,CADJ,CADJ,CADJ;;;;;AAaH,C;;;;AAILH,SAASiB,SAAT,CAAqB;AACjBR,eAAgB,iBAAUS,KAAV,CAAgBC,UADf;AAEjBX,UAAW,iBAAUY,IAAV,CAAeD,UAFT;AAGjBd,aAAc,iBAAUgB,MAAV,CAAiBF,UAHd,CAArB;;;;;AAQA,QAASG,gBAAT,CAAyBpB,KAAzB,CAAgC;AAC5B,MAAO;AACHqB,kBAAmBrB,MAAMsB,cAAN,CAAqBD,iBADrC;AAEHd,eAAgBP,MAAMsB,cAAN,CAAqBf,cAFlC;AAGHJ,aAAcH,MAAMsB,cAAN,CAAqBnB,YAHhC,CAAP;;AAKH;;;;AAID,QAASoB,mBAAT,CAA4BC,QAA5B,CAAsC;AAClC,MAAO;AACHlB,UAAW,oBAAM;AACbkB,SAAS3B,cAAc4B,YAAd,EAAT;AACH,CAHE;AAIHvB,eAAgB,wBAACwB,GAAD,CAAS;AACrBF,SAAS3B,cAAcK,cAAd,CAA6BwB,GAA7B,CAAT;AACH,CANE,CAAP;;;;;;;;AAcH,C;;AAEc;AACXN,eADW;AAEXG,kBAFW;AAGbzB,QAHa,C","sourcesContent":["import React, { PropTypes, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Col, Button} from 'react-bootstrap';\r\nimport * as OBJECTACTIONS from '../../actions/objectsActions';\r\nimport HelloComponent from '../../components/HelloComponent/HelloComponent';\r\n/* import {bindActionCreators} from 'redux'; */\r\n\r\nclass TestPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /* Component state */\r\n\r\n        this.state = {componentValue: 0}\r\n    }\r\n\r\n    storageValueHandler(){\r\n        const { incrementValue, storageValue } = this.props;\r\n        incrementValue(storageValue);\r\n    }\r\n    stateValueHandler(value){\r\n        value++;\r\n        this.setState({componentValue: value});\r\n    }\r\n\r\n/* Call before render */\r\n\r\n    componentWillMount() {\r\n        const { fetchObjs  } = this.props;\r\n        fetchObjs();\r\n    }\r\n\r\n/* Render to view */\r\n\r\n    render() {\r\n        const { fetchedObjects, storageValue } = this.props;\r\n        const { componentValue } = this.state;\r\n        const styles = require('./TestPage.scss');\r\n        return (\r\n            <div className='container'>\r\n                <Col md={12}>\r\n                    <div className={styles.search}>\r\n                        <h3>This is search page</h3>\r\n                        <p>This is fetched items {fetchedObjects.map(el=>el + ', ')}</p>\r\n                        <HelloComponent name='HelloComponent'/>\r\n                        <Button onClick={()=>this.storageValueHandler()}>Update initial storage value: {storageValue}</Button>\r\n                        <Button onClick={()=>this.stateValueHandler(componentValue)}>Update initial state value: {componentValue}</Button>\r\n                    </div>\r\n                </Col>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n/* Types of used variables */\r\n\r\nTestPage.propTypes = {\r\n    fetchedObjects: PropTypes.array.isRequired,\r\n    fetchObjs: PropTypes.func.isRequired,\r\n    storageValue: PropTypes.number.isRequired\r\n};\r\n\r\n/* Need for using objects from state in react props */\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        searchPageObjects: state.objectsReducer.searchPageObjects,\r\n        fetchedObjects: state.objectsReducer.fetchedObjects,\r\n        storageValue: state.objectsReducer.storageValue\r\n    }\r\n}\r\n\r\n/* Need for call actions in react methods by using props */\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchObjs: () => {\r\n            dispatch(OBJECTACTIONS.fetchObjects());\r\n        },\r\n        incrementValue: (val) => {\r\n            dispatch(OBJECTACTIONS.incrementValue(val))\r\n        }\r\n\r\n        /* Or using bindActionCreators : actions: bindActionCreators(OBJECTACTIONS, dispatch).\r\n         Then you can call your action in render or etc by `action` variable.\r\n        Example: action.fetchObjects()\r\n        */\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TestPage)"]}