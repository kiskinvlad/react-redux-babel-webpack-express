{"version":3,"sources":["C:/Users/kiskin-laptop/WebstormProjects/react-redux-babel-webpack-express/app\\src\\reducers\\objectsReducer.jsx"],"names":["state","INITIAL_STATE","action","payload","error","type","actionsUtils","CONFIRM","isConfirmed","ACTION","FETCH_OBJECTS_REQUEST","isLoading","FETCH_OBJECTS_SUCCESS","fetchedObjects","objects","INCREMENT_VALUE","storageValue","FETCH_OBJECTS_FAILURE","message","objectsList","loading"],"mappings":";;;;;;;AAKe,UAAyC,IAA/BA,MAA+B,2DAAvBC,aAAuB,IAARC,OAAQ;AACtD,GAAIC,SAAUD,OAAOC,OAArB;AACA,GAAIC,aAAJ;AACA,OAAQF,OAAOG,IAAf;AACE,IAAKC,cAAaC,OAAlB;AACA;AACE,MAAO,UAAc,EAAd,CAAkBP,KAAlB,CAAyB;AAC9BQ,YAAa,IADiB,CAAzB,CAAP;;AAGD;;AAED,IAAKC,QAAOC,qBAAZ;AACE,MAAO;AACH,EADG;AAEHV,KAFG;AAGH;AACAW,UAAW,IADX,CAHG,CAAP;;;;AAQF,IAAKF,QAAOG,qBAAZ;AACE,MAAO;AACH,EADG;AAEHZ,KAFG;AAGH;AACCW,UAAW,KADZ;AAECE,eAAgBV,QAAQW,OAFzB,CAHG,CAAP;;AAOF,IAAKL,QAAOM,eAAZ;AACIZ;AACF,MAAO;AACH,EADG;AAEHH,KAFG;AAGH;AACEgB,aAAcb,OADhB,CAHG,CAAP;;AAMF,IAAKM,QAAOQ,qBAAZ;AACEb,MAAQF,OAAOC,OAAP,EAAkB,CAACe,QAAShB,OAAOC,OAAP,CAAee,OAAzB,CAA1B;AACA,mBAAYlB,KAAZ;AACEmB,YAAa,CAACL,QAAS,EAAV,CAAcV,MAAOA,KAArB,CAA4BgB,QAAS,KAArC,CADf;;;AAIF;AACE,MAAOpB,MAAP,CAxCJ;;AA0CD,C,CAlDD,yD,GAAYS,O,0CACZ,qD,GAAYH,a,kRAEZ,GAAML,eAAgB,CAACY,eAAe,EAAhB,CAAoBG,aAAa,CAAjC,CAAtB,C","sourcesContent":["import * as ACTION from '../actions/objectsActions';\r\nimport * as actionsUtils from '../actions/actionsUtils';\r\n\r\nconst INITIAL_STATE = {fetchedObjects:[], storageValue:0};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  let payload = action.payload;\r\n  let error;\r\n  switch (action.type) {\r\n    case actionsUtils.CONFIRM:\r\n    {\r\n      return Object.assign({}, state, {\r\n        isConfirmed: true\r\n      });\r\n    }\r\n          \r\n    case ACTION.FETCH_OBJECTS_REQUEST:\r\n      return Object.assign(\r\n          {},\r\n          state,\r\n          {\r\n          isLoading: true,\r\n        }\r\n      );\r\n    \r\n    case ACTION.FETCH_OBJECTS_SUCCESS:\r\n      return Object.assign(\r\n          {},\r\n          state,\r\n          {\r\n           isLoading: false,\r\n           fetchedObjects: payload.objects\r\n      });\r\n    case ACTION.INCREMENT_VALUE:\r\n        payload++;\r\n      return Object.assign(\r\n          {},\r\n          state,\r\n          {\r\n            storageValue: payload\r\n          });\r\n    case ACTION.FETCH_OBJECTS_FAILURE:\r\n      error = action.payload || {message: action.payload.message};\r\n      return { ...state,\r\n        objectsList: {objects: [], error: error, loading: false} \r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]}